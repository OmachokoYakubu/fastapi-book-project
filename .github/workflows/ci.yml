name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Match your Dockerfile's Python version if possible

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build and Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping and removing existing containers..."
            docker ps -a --filter "name=fastapi" --format "{{.ID}}" | xargs -r docker stop || true
            docker ps -a --filter "name=fastapi" --format "{{.ID}}" | xargs -r docker rm || true

            echo "Removing Docker images..."
            docker images --filter "reference=*fastapi*" --format "{{.ID}}" | xargs -r docker rmi -f || true

            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

            echo "Running docker-compose up..."
            cd /home/${{ secrets.EC2_USERNAME }}  # Or wherever your docker-compose.yml is
            docker-compose up -d --force-recreate  # No need for --build, image is pulled
